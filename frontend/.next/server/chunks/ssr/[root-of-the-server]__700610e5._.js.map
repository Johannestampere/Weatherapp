{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/johannestampere/Desktop/Project_Lexiden/frontend/components/GoogleLoginButton.tsx"],"sourcesContent":["\"use client\"\nimport { GoogleLogin } from \"@react-oauth/google\";\n\nexport default function GoogleLoginButton() {\n    const handleLoginSuccess = async (credentialResponse: any) => {\n        // JWT given by google\n        const idToken = credentialResponse.credential;\n\n        if (!idToken) return;\n\n        // send google id token to backend\n        const res = await fetch(\"http://localhost:5000/auth/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ id_token: idToken }),\n            credentials: \"include\"\n        });\n\n        // get response data from backend\n        const data = await res.json();\n\n        // save the JWT returned by the backend\n        if (data.token) {\n            localStorage.setItem(\"token\", data.token);\n        } else {\n            console.error(\"login failed: \", data);\n        }\n    }\n\n    return (\n        <GoogleLogin\n            onSuccess={handleLoginSuccess}\n            onError={() => console.error(\"login error\")}\n        />\n    );\n}\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACpB,MAAM,qBAAqB,OAAO;QAC9B,sBAAsB;QACtB,MAAM,UAAU,mBAAmB,UAAU;QAE7C,IAAI,CAAC,SAAS;QAEd,kCAAkC;QAClC,MAAM,MAAM,MAAM,MAAM,oCAAoC;YACxD,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE,UAAU;YAAQ;YACzC,aAAa;QACjB;QAEA,iCAAiC;QACjC,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,uCAAuC;QACvC,IAAI,KAAK,KAAK,EAAE;YACZ,aAAa,OAAO,CAAC,SAAS,KAAK,KAAK;QAC5C,OAAO;YACH,QAAQ,KAAK,CAAC,kBAAkB;QACpC;IACJ;IAEA,qBACI,8OAAC,kKAAA,CAAA,cAAW;QACR,WAAW;QACX,SAAS,IAAM,QAAQ,KAAK,CAAC;;;;;;AAGzC","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/johannestampere/Desktop/Project_Lexiden/frontend/lib/useUser.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport type User = {\n    name: string\n    email: string\n};\n\n// hook to store user state when logged in\nexport default function useUser() {\n    const [user, setUser] = useState<User | null>(null)\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                // get user data\n                const res = await fetch(\"http://localhost:5000/auth/me\", {\n                    credentials: \"include\"\n                });\n\n                const data = await res.json();\n\n                if (res.ok) {\n                    setUser(data);\n                } else {\n                    setUser(null);\n                }\n            } catch (err) {\n                setUser(null);\n            }\n\n        }\n\n        fetchUser();\n    }, [])\n    \n    return { user };\n}"],"names":[],"mappings":";;;AAAA;;AAQe,SAAS;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,IAAI;gBACA,gBAAgB;gBAChB,MAAM,MAAM,MAAM,MAAM,iCAAiC;oBACrD,aAAa;gBACjB;gBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAE3B,IAAI,IAAI,EAAE,EAAE;oBACR,QAAQ;gBACZ,OAAO;oBACH,QAAQ;gBACZ;YACJ,EAAE,OAAO,KAAK;gBACV,QAAQ;YACZ;QAEJ;QAEA;IACJ,GAAG,EAAE;IAEL,OAAO;QAAE;IAAK;AAClB","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/johannestampere/Desktop/Project_Lexiden/frontend/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport GoogleLoginButton from \"@/components/GoogleLoginButton\";\nimport useUser from \"@/lib/useUser\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nexport default function LandingPage() {\n  const { user } = useUser();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (user) {\n      router.push(\"/chat\");\n    }\n  }, [user])\n\n  return (\n    <div className=\"flex flex-col justify-center items-center gap-10\">\n      <h1 className=\"text-bold text-3xl\">Welcome to WeatherGPT, sign in to get started</h1>\n      <div>\n        <GoogleLoginButton/>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,8GAAA,CAAA,UAAO,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM;YACR,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;KAAK;IAET,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,8OAAC;0BACC,cAAA,8OAAC,gIAAA,CAAA,UAAiB;;;;;;;;;;;;;;;;AAI1B","debugId":null}}]
}